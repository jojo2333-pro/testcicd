name: Deploy Micro Frontends (Turbo + Pages)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  REPO: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v4
        with: { version: 9 }

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 缓存 turbo 与 pnpm store
      - name: Cache turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-${{ github.ref }}-
            turbo-${{ runner.os }}-
      - name: Configure pnpm store
        run: pnpm config set store-dir .pnpm-store
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: .pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps (workspace)
        run: pnpm install --frozen-lockfile

      # 一条命令构建全部：turbo 会并行并做缓存
      - name: Turbo build (CI)
        run: pnpm build:ci

      # 组装站点
      - name: Assemble site
        run: |
          mkdir -p _site/apps/vue-demo _site/apps/react-demo
          cp -r main/dist/*           _site/
          cp -r web/vue-demo/dist/*   _site/apps/vue-demo/
          cp -r web/react-demo/dist/* _site/apps/react-demo/
          cat > _site/micro-apps.json <<EOF
          {
            "vue-demo":   { "url": "/$REPO/apps/vue-demo/" },
            "react-demo": { "url": "/$REPO/apps/react-demo/" }
          }
          EOF
          cp _site/index.html _site/404.html
          echo "== micro-apps.json ==" && cat _site/micro-apps.json

      - uses: actions/upload-pages-artifact@v3
        with: { path: _site }

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
